import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  icons: {
    icon: "/mk-study.png",
  },
  title: "MK Study",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="min-h-screen bg-gradient-to-br from-green-50 via-green-50 to-green-50 relative overflow-hidden">
          {/* Decorative background lines */}
          <div className="absolute inset-0 opacity-20">
            <svg
              className="absolute inset-0 h-full w-full"
              preserveAspectRatio="xMidYMid slice"
            >
              <defs>
                <pattern
                  id="grid"
                  width="100"
                  height="100"
                  patternUnits="userSpaceOnUse"
                >
                  <path
                    d="m 100 0 l 0 100 m -100 0 l 100 0"
                    stroke="currentColor"
                    strokeWidth="0.5"
                    fill="none"
                    opacity="0.3"
                  />
                </pattern>
                <linearGradient
                  id="fadeGradient"
                  x1="0%"
                  y1="0%"
                  x2="100%"
                  y2="100%"
                >
                  <stop
                    offset="0%"
                    style={{ stopColor: "#3b82f6", stopOpacity: 0.1 }}
                  />
                  <stop
                    offset="50%"
                    style={{ stopColor: "#8b5cf6", stopOpacity: 0.05 }}
                  />
                  <stop
                    offset="100%"
                    style={{ stopColor: "#ec4899", stopOpacity: 0.1 }}
                  />
                </linearGradient>
              </defs>
              <rect width="100%" height="100%" fill="url(#grid)" />
              <rect width="100%" height="100%" fill="url(#fadeGradient)" />
            </svg>
          </div>

          {/* Floating geometric shapes */}
          <div className="absolute inset-0 overflow-hidden pointer-events-none">
            <div className="absolute top-20 left-10 w-32 h-32 bg-gradient-to-r from-green-200 to-emerald-200 rounded-full opacity-20 animate-pulse"></div>
            <div
              className="absolute top-40 right-20 w-24 h-24 bg-gradient-to-r from-lime-200 to-green-200 rounded-full opacity-20 animate-pulse"
              style={{ animationDelay: "1s" }}
            ></div>
            <div
              className="absolute bottom-40 left-20 w-40 h-40 bg-gradient-to-r from-emerald-200 to-teal-200 rounded-full opacity-20 animate-pulse"
              style={{ animationDelay: "2s" }}
            ></div>
            <div
              className="absolute bottom-20 right-10 w-28 h-28 bg-gradient-to-r from-teal-200 to-green-200 rounded-full opacity-20 animate-pulse"
              style={{ animationDelay: "0.5s" }}
            ></div>
          </div>

          {/* Content */}
          <div className="relative z-10">{children}</div>
        </div>
      </body>
    </html>
  );
}
